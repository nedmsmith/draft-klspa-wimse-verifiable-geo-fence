



Workload Identity in Multi System Environments               R. Krishnan
Internet-Draft                                                  N. Smith
Intended status: Informational                                     Intel
Expires: 13 November 2025                                       D. Lopez
                                                              Telefonica
                                                               A. Prasad
                                                                  Oracle
                                                            S. Addepalli
                                                                  Aryaka
                                                             12 May 2025


          Trustworthy and Verifiable Geo-fencing for Workloads
             draft-lkspa-wimse-verifiable-geo-fence-latest

Abstract

   Financial services, healthcare and government entities have data
   residency requirements, geo-location affinity and host affinity, to
   protect sensitive data.  Geo-location affinity necessitates workload
   being cryptographically bound to a geographic boundary.  Host
   affinity entails workload being cryptographically bound to a specific
   execution environment.  These requirements are well described in the
   Trusted Computing Group keynote and whitepaper on emerging use case
   and solutions [tcg-geo-loc].  From WIMSE perspective, to address
   these requirements, workload identity needs to be cryptographically
   bound to platform identity and domain identity.  Examples of platform
   identity are Device ID such as TPM [tcg-tpm] endorsement.  Examples
   of domain identity are Geographic boundary such as Geo-location
   area/region/country.  This draft aims to address the aforementioned
   gaps in WIMSE through use cases and high level architectural flows.

About This Document

   This note is to be removed before publishing as an RFC.

   The latest revision of this draft can be found at
   https://nedmsmith.github.io/draft-klspa-wimse-verifiable-geo-fence/
   draft-lkspa-wimse-verifiable-geo-fence.html.  Status information for
   this document may be found at https://datatracker.ietf.org/doc/draft-
   lkspa-wimse-verifiable-geo-fence/.

   Discussion of this document takes place on the Workload Identity in
   Multi System Environments mailing list (mailto:wimse@ietf.org), which
   is archived at https://mailarchive.ietf.org/arch/browse/wimse/.
   Subscribe at https://www.ietf.org/mailman/listinfo/wimse/.

   Source for this draft and an issue tracker can be found at
   https://github.com/nedmsmith/draft-klspa-wimse-verifiable-geo-fence.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on 13 November 2025.

Copyright Notice

   Copyright (c) 2025 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents (https://trustee.ietf.org/
   license-info) in effect on the date of publication of this document.
   Please review these documents carefully, as they describe your rights
   and restrictions with respect to this document.  Code Components
   extracted from this document must include Revised BSD License text as
   described in Section 4.e of the Trust Legal Provisions and are
   provided without warranty as described in the Revised BSD License.

Table of Contents

   1.  Introduction
   2.  Conventions and Definitions
   3.  Use Cases: Cryptographic Attestation of Geographic Boundaries
     3.1.  *Category 1*: Enterprise need cryptographic proof of
           trustworthy geographic boundary (region, zone, countries,
           state etc.) for cloud facing workloads
       3.1.1.  *User workload <-> Server workload*:
     3.2.  *Category 2*: Enterprise need cryptographic proof of
           trustworthy geographic boundary for user facing workloads
     3.3.  *Category 3*: Security assurance and compliance
   4.  Approach summary
   5.  Attestation for System Bootstrap and Agent Initialization
     5.1.  Attestation of OS Integrity and Proof of Residency on Host
     5.2.  Start/restart time attestation/remote verification of agent
           for integrity and proof of residency on Host
   6.  Agent geo-location and geo-fencing workflow - this is run
           periodically (say every 5 minutes) to ensure that the host is
           in the same location
     6.1.  Step 2: Agent gets attested geographic boundary using
           Geo-fencing (GF) service
   7.  Workload (W) attestation and remote verification - key steps
   8.  Networking Protocol Changes
     8.1.  Using TLS
     8.2.  Not Using TLS
     8.3.  Approaches
   9.  Host Composition Table
   10. Authorization Policy Implementers
   11. Security Considerations
   12. IANA Considerations
   13. References
     13.1.  Normative References
     13.2.  Informative References
   Acknowledgments
   Contributors
   Authors' Addresses

1.  Introduction

   TODO Introduction - nms

2.  Conventions and Definitions

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in
   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all
   capitals, as shown here.

3.  Use Cases: Cryptographic Attestation of Geographic Boundaries

   Standardizing the attestation of a host’s geographic location enables
   interoperable enforcement of policy, compliance, and security
   guarantees across diverse deployment environments.  The following use
   cases motivate the need for a verifiable geographic claim.

3.1.  *Category 1*: Enterprise need cryptographic proof of trustworthy
      geographic boundary (region, zone, countries, state etc.) for
      cloud facing workloads

   ### *Server workload <-> Server workload*: Enterprises handling
   sensitive data—such as EU banks—rely on dedicated cloud hosts (e.g.,
   EU sovereign cloud providers) to ensure high availability while
   complying with data residency laws.  To meet these requirements, they
   need to be able to verify the geographic boundary where their
   dedicated hosts are deployed.

3.1.1.  *User workload <-> Server workload*:

   Enterprise (e.g. healthcare) ensuring that it is communicating with a
   server (e.g. cloud service) located within a specific geographic
   boundary.

3.2.  *Category 2*: Enterprise need cryptographic proof of trustworthy
      geographic boundary for user facing workloads

   *  A server (or proxy) authenticates to clients using different TLS
      certificates, each signed by a different Certificate Authority
      (CA), based on the geographic boundaries of user workloads.

   *  Enterprise on-premise Customer Premise Equipment (CPE) provides
      its geographic boundary using a mobile network.  This ensures that
      the Host (H) – a computing device such as a PC, phone, or router –
      connected to the CPE, is physically present on-premise.

   *  Construction & Engineering SaaS workloads can benefit immensely
      from attested geographic boundary data from end-user devices to
      restrict access within specific regions (e.g., California).
      Enabling per-user or group-level geo-fencing helps prevent
      fraudulent access originating outside the authorized area.

   *  Healthcare providers need to ensure that the Host (H) is located
      in a specific geographic boundary (countries e.g. US) when
      downloading patient data or performing other sensitive operations.

   *  U.S.  Presidential Executive Order compliance: For example, U.S.
      Cloud Service Providers (CSPs) may have support personnel located
      in a restricted geographic boundary (countries e.g., Venezuela,
      Iran, China, North Korea).  However, those personnel should not be
      allowed to support U.S. customers.  Geo-location enforcement can
      ensure policy compliance.  See [doj-cisa].

3.3.  *Category 3*: Security assurance and compliance

   Geographic boundary attestation helps satisfy data residency and data
   sovereignty requirements for regulatory compliance.

4.  Approach summary

   Host contains location devices like mobile sensor, GPS sensor, WiFi
   sensor, GNSS sensor, etc.  Host is a compute node, including servers,
   routers, and end-user appliances like smartphones or tablets or PCs.
   Host has a discrete TPM.  Note on TPM -- The EK certificate is a
   digital certificate signed by the TPM manufacturer's CA which
   verifies the identity and trustworthiness of the TPM's Endorsement
   Key (EK); TPM attestation key (AK) is cryptographically backed by TPM
   EK.  For the initial version of the draft, host is bare metal Linux
   OS host and interactions are with TPM.

   Trusted hosts are the hosts which have trustworthy device composition
   (TPM EK, Mobile-SIM, GPS device id etc.), endorsed by manufacturer/
   owner, and use a trustworthy OS.  A set of trusted hosts along with
   the device composition details and OS details are recorded in a
   shared datastore (database or ledger) by the host owner.

   Workload (W) and Agent run on a set of trusted hosts.  W can be a
   server app, a mobile/PC app (including browser), or a network host
   (e.g., router).  Proof of Residency of W on a trusted host is
   obtained using TPM.  W asks its Agent for proof, which in turn asks
   TPM for AK-attested proof.

   Agent sends attested geographic boundary (e.g., cloud region, city,
   country etc.) and W’s parameters to Workload Identity Manager (WIM).

   *  Example for Agent used in this document: SPIFFE/SPIRE agent can be
      enhanced to add attested geographic boundary that will become part
      of Identity granted (e.g., SVID).

   *  Example for WIM used in this document: SPIFFE/Spire server

   *  WIM gives signed Workload ID (WID) with geographic boundary as an
      additional field.  This could be a certificate or a token.

5.  Attestation for System Bootstrap and Agent Initialization

   The location agent, which is a modified SPIFFE/SPIRE (spire) agent
   using a geo-location plugin mechanism, is a daemon running on bare-
   metal Linux OS Host (H) as a process with direct access to TPM (root
   permissions for TPM 2.0 access may be needed for certain Linux
   distributions for certain H hardware configurations).  The agent can
   gather the location from host local location sensors (e.g. GPS,
   GNSS).  The agent has a TPM plugin (spire-tpm) which interacts with
   the TPM.  The server (SPIFFE/SPIRE server) is running in cluster
   which is isolated from the cluster in which the agent is running.

5.1.  Attestation of OS Integrity and Proof of Residency on Host

   As part of system boot/reboot process, boot loader based measured
   system boot with remote SPIFFE/SPIRE server verification is used to
   ensure only approved OS is running on an approved hardware platform.

   Measurement Collection: During the boot process, the boot loader
   collects measurements (hashes) of the boot components and
   configurations.  The boot components are Firmware/BIOS/UEFI,
   bootloader, OS, drivers, location devices and initial programs.  All
   the location devices (e.g. GPS sensor, Mobile sensor) version/
   firmware in a platform are measured during each boot -- this is a
   boot loader enhancement.  Any new location device which is hotswapped
   in will be evaluated for inclusion only during next reboot.

   Log Creation: These measurements are recorded in a log, often
   referred to as the TCGLog, and stored in the TPM's Platform
   Configuration Registers (PCRs).

   Attestation Report: The TPM generates an attestation report, which
   includes the signed measurements and the boot configuration log.  The
   signature of the attestation report (aka quote) is by a TPM
   attestation key (AK).  This attestation includes data about the TPM's
   state and can be used to verify that the AK is indeed
   cryptographically backed by the TPM EK certificate.

   Transmission: The attestation report is then sent to an external
   verifier (server), through a secure TLS connection.

   Remote Verification: The remote server checks the integrity of the
   attestation report and validates the measurements against known good
   values from the set of trusted hosts in the shared datastore.  The
   server also validates that the TPM EK certificate has not been
   revoked and part of approved list of TPM EK identifiers associated
   with hardware platform.  At this point, we can be sure that the
   hardware platform is approved for running workloads and is running an
   approved OS.

5.2.  Start/restart time attestation/remote verification of agent for
      integrity and proof of residency on Host

   As part of agent start/restart process, linux integrity measurement
   architecture (linux-ima) is used to ensure that only approved
   executable for agent is loaded.

   Measurement collection: The agent executable is measured by linux-ima
   before it is loaded.  Local Verification: Enforce local validation of
   a measurement against a approved value stored in an extended
   attribute of the file.

   TPM attestation and remote server verification:

   *  Agent generates attestation key (AK) using TPM for proof of
      residency on H.

   *  Agent sends the AK attestation parameters (PCR quote, workload
      attestation public etc.) and EK certificate to the server

   *  Server inspects EK certificate.  If ca_path exists, and the EK
      certificate was signed by any chain in ca_path, validation passes

   *  If validation passed, the server generates a credential activation
      challenge.  The challenge's secret is encrypted using the EK
      public key.

   *  Server sends challenge to agent

   *  Agent decrypts the challenge's secret

   *  Agent sends back decrypted secret

   *  Server verifies that the decrypted secret is the same it used to
      build the challenge

   *  Server creates a SPIFFE ID along with the sha256sum of the TPM AK
      public key.  Server stores agent SPIFFE ID mapping to TPM AK
      public key in a shared datastore.

6.  Agent geo-location and geo-fencing workflow - this is run
    periodically (say every 5 minutes) to ensure that the host is in the
    same location

   ## Step 1: Agent gets attested composite location using Geo-location
   service (GL) Geo-location service (GL) runs outside of H -- besides
   the location from device location sources (e.g. GPS, GNSS), it will
   connect to mobile location service providers (e.g., Telefonica) using
   GSMA location API (gsma-loc).

   *  Agent gathers the location from H local location sensors (e.g.
      GPS, GNSS).  Agent connects to GL using secure connection
      mechanism like TLS.  Agent provides the gathered location to GL
      over the secure connection.

   *  Location (L) has a quality associated with it.  For example, IP
      address-based L is of lower quality as compared to other sources.

   *  GL ensures that the device composition of H (reference to H
      composition table for further details) is intact (e.g. SIM card
      not plugged out of H) by periodically polling the state of H.  H
      is a member of the set of trusted hosts in the shared datastore --
      the shared datastore has the host composition details.  Note that
      e-SIM does not have the plugging out problem like standard SIM but
      could be subject to e-SIM swap attack.  Host composition (HC)
      comprises of TPM EK, Mobile-SIM etc.

   *  GL derives a combined location, including location quality, from
      various location sensors for a H with multiple location sensors --
      this includes the gathered location from Agent running on H.  As
      an example, GPS is considered less trustworthy as compared to
      mobile.

   *  The composite location comprises of combined geo-location (which
      includes location quality), host composition (TPM EK, mobile-SIM
      etc.) and time from a trusted source.  GL signs the composite
      location with a private key whose public key certificate is a
      public trusted transparent ledger such as certificate transparency
      log.  Now we have a attested composite location.

   *  Agent is returned the attested composite location over the secure
      connection.  Agent signs the attested composite location using TPM
      AK establishing proof of residency of composite location to H.
      This is called attested proof-of-residency aware composite
      location (APL).

6.1.  Step 2: Agent gets attested geographic boundary using Geo-fencing
      (GF) service

   *  Geo-fence policies are of four flavours - (1) boolean membership
      of given boundary (rectangular, circular, state etc.), (2) precise
      location, (3) precise bounding box/circle of location, (4)
      approximate location with no definition of boundary.  The first
      one, boolean membership of given boundary, is the most common and
      will be assumed as the default.  They are available in the form of
      pre-defined templates or can be configured on demand.
      Enterprises, who are the user of the hosts, choose the geo-fence
      policies to be enforced for various hosts.  Note that the hosts
      must belong to the set of trusted hosts in a shared ledger.  The
      geo-fence policies applied to the set of trusted hosts are
      recorded in a shared ledger.

   *  Location agent on H supplies (APL) to geo-fence service (GF) over
      a secure connection.  GF performs geo-fence policy enforcement by
      matching the location against configured geo-fence policies.  GF
      signs the geo-fence policy match result, along with a trusted time
      (potentially leverage RFC 3161), with a private key whose public
      key certificate is a public trusted transparent ledger such as
      certificate transparency log.

   *  Geo-fence policy match result details (non-exhaustive): 1) Geo-
      fence policy which matched 2) Boolean - inside or outside geo-
      fence - applicable to boolean membership of given boundary policy
      type.

   *  Agent is returned the attested geo-fence policy match result.
      Agent signs the attested geo-fence policy match result using TPM
      AK establishing proof of residency of geo-fence policy match
      result to H.  This is called attested proof-of-residency aware
      geo-fence policy match result (APGL).

7.  Workload (W) attestation and remote verification - key steps

   *  Agent ensures that W connects to it on H local socket (e.g. Unix
      domain socket).  Agent generates private/public key pair for W.
      Agent signs the W public key with its TPM AK.  Agent sends the
      signed W public key along with its SPIFFE ID and last known APGL
      to the server.  Note that the TPM AK is already verified by the
      server as part of the agent attestation process establishing proof
      of residency of Agent to H.

   *  Server gets the Agent TPM AK public key from the SPIFFE ID by
      looking it up in the shared datastore.  Server verifies the W
      public key signature using the TPM AK public key.  Server then
      sends an encrypted challenge to the agent.  The challenge's secret
      is encrypted using the W public key.

   *  Agent decrypts the challenge using its W private key and sends the
      response back to the server.

   *  Server verifies that the decrypted secret is the same it used to
      build the challenge.  It then issues SPIFFE ID for W.  The SPIFFE
      ID is signed by the server and contains the W public key and the
      geographic boundary (e.g. cloud region, city, country etc.) of the
      host.  The geographic boundary is obtained from the last known
      APGL.  The server also stores the W SPIFFE ID mapping to W public
      key in a shared datastore.

8.  Networking Protocol Changes

   Workload ID (WID), with location field, in the form of a proof-of-
   residency certificate or token needs to be conveyed to the peer
   during connection establishment.  The connection is end-to-end across
   proxies like

8.1.  Using TLS

   *  HTTP session termination (SASE firewall, API gateways etc.) -
      terminate and re-establish TLS.

   *  RDP latest version - terminate and re-establish TLS; tcp/ip.

   *  SCTP session termination (Mobile network SASE firewall etc.) -
      terminate and re-establish TLS; sctp/ip; does not use TCP or UDP.

8.2.  Not Using TLS

   *  SSH tunnel (Jump hosts etc.) - terminate and re-establish ssh;
      tcp/ip; does not use TLS.

   *  IPSEC tunnel (Router control plane etc.) - terminates IPSEC tunnel
      and forwards encapsulated traffic; ip; does not use TLS.

8.3.  Approaches

   *  Enhance applications (e.g. MCP protocol) to convey Workload ID
      (WID), with location field.

   *  Enhance HTTP headers to convey Workload ID (WID), with location
      field.

   *  Enhance TLS to convey Workload ID (WID), with location field.

   *  Enhance SSH/IPSEC to convey Workload ID (WID), with location
      field.

9.  Host Composition Table

    +===============+=================================+==============+
    | Component     | Functionality                   | Comments     |
    +===============+=================================+==============+
    | Host          | The system that is composed of  |              |
    |               | all of the following software   |              |
    |               | or hardware components.         |              |
    +---------------+---------------------------------+--------------+
    | Trusted       | Storage root of trust: * TPM -  |              |
    | hardware      | Location root of trust options: |              |
    | devices       | GPS sensor, GNSS sensor -       |              |
    | (focus on     | signal authentication prevents  |              |
    | geo-location) | spoofing [galileo], Mobile      |              |
    |               | sensor - modem, antenna, SIM -  |              |
    |               | Mobile device location is       |              |
    |               | obtained from mobile network    |              |
    |               | operator and not from device,   |              |
    |               | Wi-Fi sensor - modem, antenna   |              |
    +---------------+---------------------------------+--------------+
    | Boot loader   | All the devices (version/       |              |
    |               | firmware) in a platform are     |              |
    |               | trusted and measured during     |              |
    |               | each boot (boot loader          |              |
    |               | enhancement), Any new device    |              |
    |               | (e.g. Mobile location sensor)   |              |
    |               | which is hotswapped in will be  |              |
    |               | evaluated for inclusion only    |              |
    |               | during next reboot.             |              |
    +---------------+---------------------------------+--------------+
    | Trusted OS    | Trusted drivers for storage/    |              |
    |               | location root of trust.  Does   |              |
    |               | not tamper GPS location/Wi-Fi   |              |
    |               | data.                           |              |
    +---------------+---------------------------------+--------------+
    | Geo-location  | Trusted application.  Does not  | Possibly a   |
    | Agent SW - OS | tamper GPS location/Wi-Fi data. | Spire-agent  |
    | level service | Sign GPS location data          | plug-in with |
    |               | (latitude/ longitude/           | TPM          |
    |               | altitude), proximal Wi-Fi       | attestation. |
    |               | access points using TPM         |              |
    |               | attestation key.                |              |
    +---------------+---------------------------------+--------------+

                                 Table 1

   *Note*: A GPS sensor with a cryptographic signature, also known as
   GNSS signal authentication, uses digital signatures in the broadcast
   signal to ensure the authenticity and integrity of the GPS data,
   protecting against spoofing attacks.

10.  Authorization Policy Implementers

   Policy Implementers use attested a geographic boundary from W to make
   decisions.  Example implementers:

   *  SaaS application.

   *  K8s node agent.

   *  OS process scheduler.

   If the policy implementer is at the SaaS application level, things
   are simpler.  However, if it is pushed down to, say, K8s or OS
   process scheduler or JVM class loader/deserializer, then malware can
   be prevented (similar to code-signed application).

11.  Security Considerations

   TODO Security

12.  IANA Considerations

   This document has no IANA actions.

13.  References

13.1.  Normative References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/rfc/rfc2119>.

   [RFC8174]  Leiba, B., "Ambiguity of Uppercase vs Lowercase in RFC
              2119 Key Words", BCP 14, RFC 8174, DOI 10.17487/RFC8174,
              May 2017, <https://www.rfc-editor.org/rfc/rfc8174>.

13.2.  Informative References

   [doj-cisa] DOJ and CISA, "DOJ and CISA Issue New National Security
              Program to Regulate Foreign Access to Sensitive Data",
              n.d., <https://www.justice.gov/opa/pr/justice-department-
              implements-critical-national-security-program-protect-
              americans-sensitive>.

   [galileo]  European Commission, EU Space, "Galileo Satellite
              Navigation", n.d., <https://defence-industry-
              space.ec.europa.eu/eu-space/galileo-satellite-
              navigation_en>.

   [gsma-loc] GSMA open gateway documentation, "GSMA location API",
              n.d., <https://www.gsma.com/solutions-and-impact/gsma-
              open-gateway/gsma-open-gateway-api-descriptions/>.

   [I-D.ietf-wimse-arch]
              Salowey, J. A., Rosomakho, Y., and H. Tschofenig,
              "Workload Identity in a Multi System Environment (WIMSE)
              Architecture", Work in Progress, Internet-Draft, draft-
              ietf-wimse-arch-04, 2 March 2025,
              <https://datatracker.ietf.org/doc/html/draft-ietf-wimse-
              arch-04>.

   [linux-ima]
              Sourceforge Linux IMA documentation, "Linux integrity
              measurement architecture", n.d.,
              <https://linux-ima.sourceforge.net/>.

   [spire]    Spire open source project, "SPIFFE/SPIRE workload
              identity", n.d., <https://spiffe.io/>.

   [spire-tpm]
              Spire open source project plugin, "SPIFFE/SPIRE TPM
              plugin", n.d.,
              <https://github.com/bloomberg/spire-tpm-plugin>.

   [tcg-geo-loc]
              TCG, "TCG keynote and whitepaper-Trusted Computing Future-
              Emerging Use Cases and Solutions", n.d.,
              <https://trustedcomputinggroup.org/resource/trusted-
              computing-future-emerging-use-cases-and-solutions/>.

   [tcg-tpm]  TCG, "Trusted Platform Module 2.0-A Brief Introduction",
              n.d., <https://trustedcomputinggroup.org/resource/trusted-
              platform-module-2-0-a-brief-introduction/>.

Acknowledgments

   TODO acknowledge.

Contributors

   Ghada Arfaoui
   Orange
   Email: ghada.arfaoui@orange.com


Authors' Addresses

   Ramki Krishnan
   Intel
   Email: ramki.krishnan@intel.com


   Ned Smith
   Intel
   Email: ned.smith@intel.com


   Diego R. Lopez
   Telefonica
   Email: diego.r.lopez@telefonica.com


   A Prasad
   Oracle
   Email: a.prasad@oracle.com


   Srinivasa Addepalli
   Aryaka
   Email: srinivasa.addepalli@aryaka.com
